Užduotis 1: Parašykite funkciją create_temp_file, kuri sukuria laikiną failą duotame kataloge. Naudokite fixtures, kad testams pateiktumėte laikiną katalogą, filų pavadinimus ir turinius.
	Testai: Užtikrinkite, kad failai būtų sukurti ir turinys teisingas.

Užduotis 2: Parašykite fixture math_params(), kuri grąžina du sveikuosius skaičius a ir b, kurie gali būti naudojami matematinių operacijų testuose.
	Funkcijos: Implementuokite funkcijas add(a, b), sub(a, b), multiply(a, b), devide(a, b).
	Testas: Parašykite testus, kuriuose naudokite fixture ir patikrinkite įgyvendintas funkcijas.

Užduotis 3
	Funkcija: Sukurkite funkciją count_words_in_file(file_path), kuri skaičiuoja žodžių skaičių duotame tekstiniame faile.
	Fixture: Sukurkite fixture temp_file_with_content(), kuris sukuria laikiną teksto failą su iš anksto nustatytu turiniu ir grąžina failo kelią.
	Testas: Parašykite testo funkciją, kuri naudotų temp_file_with_content fixture, kad patikrintų finkciją count_words_in_file.

Užduotis 4
	Funkcija: Įgyvendinkite funkcijas remove_from_list(lst), append_to_list(lst), remove_duplicates_from_list(lst) kuri pašalina pasikartojančius elementus iš sąrašo lst, prideda elementus arba pašalina.
	Fixture: Sukurkite fixture sample_list(), kurioje pateikiams sąrašas (arba keli sąrašai).
	Testas: Parašykite testavimo funkcijas, kuri naudotų sample_list, kad patikrintų remove_from_list(lst), append_to_list(lst), remove_duplicates_from_list(lst).

Užduotis 5
	Funkcija: Sukurkite funkciją get_value_dict(dict, key), remove_value_dict(dict, key), kuri iš žodyno išgauna reikšmę arba pašalina.
	Fixture: Sukurkite fixture dict_data(), kuriame pateikiamas žodynas ir raktas.
	Testas: Parašykite testavimo funkcijas, kuri naudotų dict_data testavime.

Užduotis 6
	Funkcija: Sukurkite funkciją get_element(lst, index), kuri grąžina elementą, esantį sąrašo lst indekso pozicijoje. Iškelkite IndexError, jei indeksas yra už intervalo ribų.
	Testas: Parašykite testavimo funkciją test_get_element_index_error(), kuri tikrina, ar get_element teisingai praneša apie IndexError, kai kreipiamasi į indeksą, esantį už intervalo ribų.

Užduotis 7
	Funkcija: Sukurkite funkciją calculate_square_root(n), kuri apskaičiuoja skaičiaus n kvadratinę šaknį.
	Testas: Parašykite testavimo funkciją test_calculate_square_root_type_error(), kuri tikrina, ar calculate_square_root teisingai sukelia TypeError, kai pateikiamas neteisingas įvesties tipas.

Užduotis 8
	Funkcija: Sukurkite funkciją get_value_from_dict(d, key), kuri iš žodyno d išgauna su raktu susietą reikšmę.
	Testas: Sukurkite testavimo funkciją test_get_value_from_dict_key_error(), kuri tikrina, ar get_value_from_dict teisingai sukelia KeyError, kai kreipiamasi į neegzistuojantį raktą.

Užduotis 9
	Funkcija: Sukurkite funkciją validate_age(age), kuri patikrina, ar amžius yra galiojančiame intervale (0-150 metų). Jei amžius nepatenka į šį intervalą, kelkite ValueError klaidą.
	Testas: Parašykite testavimo funkciją test_validate_age_value_error(), kuri tikrina, ar validate_age teisingai sukelia ValueError, kai pateikiamas neteisingas amžius.